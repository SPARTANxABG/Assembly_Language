Microsoft (R) Macro Assembler Version 14.16.27045.0	    10/17/21 21:25:33
MASM Template						(main.asm  Page 1 - 1


				TITLE MASM Template						(main.asm)

				INCLUDE Irvine32.inc
			      C ; Include file for Irvine32.lib             (Irvine32.inc)
			      C 
			      C ;OPTION CASEMAP:NONE		; optional: make identifiers case-sensitive
			      C 
			      C INCLUDE SmallWin.inc		; MS-Windows prototypes, structures, and constants
			      C .NOLIST
			      C .LIST
			      C 
			      C INCLUDE VirtualKeys.inc
			      C ; VirtualKeys.inc
			      C .NOLIST
			      C .LIST
			      C 
			      C 
			      C .NOLIST
			      C .LIST
			      C 
 00000000			.data

 00000000 00000000		average1 dword 0
 00000004 00000000		average2 dword 0
 00000008 00000000		average3 dword 0

 0000000C 53 74 75 64 65	myMessage BYTE "Student number ",0
	   6E 74 20 6E 75
	   6D 62 65 72 20
	   00
 0000001C 50 6C 65 61 73	myMessage1 BYTE "Please enter your name: ", 0dh, 0ah, 0
	   65 20 65 6E 74
	   65 72 20 79 6F
	   75 72 20 6E 61
	   6D 65 3A 20 0D
	   0A 00
 00000037 2C 20 70 6C 65	myMessage2 BYTE ", please enter 5 grades: ", 0dh, 0ah, 0
	   61 73 65 20 65
	   6E 74 65 72 20
	   35 20 67 72 61
	   64 65 73 3A 20
	   0D 0A 00
 00000053 67 72 61 64 65	mymessage3 byte "grade number ",0
	   20 6E 75 6D 62
	   65 72 20 00
 00000061 3A 20 20 00		mymessage4 byte ":  ",0
 00000065 2C 20 74 68 65	myMessage5 byte ", the average is: ", 0
	   20 61 76 65 72
	   61 67 65 20 69
	   73 3A 20 00
 00000078 20 0D 0A 00		myMessage6 BYTE " ", 0dh, 0ah, 0

 0000007C 20 59 6F 75 20	myMessageA BYTE " You got an A!", 0dh, 0ah, 0
	   67 6F 74 20 61
	   6E 20 41 21 0D
	   0A 00
 0000008D 20 59 6F 75 20	myMessageB BYTE " You got an B!", 0dh, 0ah, 0
	   67 6F 74 20 61
	   6E 20 42 21 0D
	   0A 00
 0000009E 20 59 6F 75 20	myMessageC BYTE " You got an C!", 0dh, 0ah, 0
	   67 6F 74 20 61
	   6E 20 43 21 0D
	   0A 00
 000000AF 20 59 6F 75 20	myMessageF BYTE " You got an F :(", 0dh, 0ah, 0
	   67 6F 74 20 61
	   6E 20 46 20 3A
	   28 0D 0A 00

 000000C2 20 20 20 20 20	name1 byte "              ",0
	   20 20 20 20 20
	   20 20 20 20 00
 000000D1 20 20 20 20 20	name2 byte "              ",0
	   20 20 20 20 20
	   20 20 20 20 00
 000000E0 20 20 20 20 20	name3 byte "              ",0
	   20 20 20 20 20
	   20 20 20 20 00

 00000000			.code

 00000000			getName proc

 00000000  BA 0000001C R		mov edx, offset myMessage1
 00000005  E8 00000000 E		call writestring
 0000000A  8B D3			mov edx, ebx
 0000000C  8B D8			mov ebx, eax
 0000000E  E8 00000000 E		call readstring			

 00000013  C3			ret
 00000014			getName endp

 00000014			getAverage1 proc

 00000014				L2:

 00000014  8B C2			mov eax, edx
 00000016  BA 00000053 R		mov edx, OFFSET mymessage3
 0000001B  E8 00000000 E		call writestring
 00000020  8B D0			mov edx, eax
 00000022  B8 00000006			mov eax, 6
 00000027  2B C1			sub eax, ecx
 00000029  E8 00000000 E		call writeint
 0000002E  8B C2			mov eax, edx
 00000030  BA 00000061 R		mov edx, OFFSET mymessage4
 00000035  E8 00000000 E		call writestring
 0000003A  8B D0			mov edx, eax
 0000003C  E8 00000000 E		call readint
 00000041  03 D0			add edx, eax
 00000043  8B C2			mov eax, edx
 00000045  E2 CD			loop L2

 00000047  C3			ret
 00000048			getAverage1 endp

 00000048			main PROC

 00000048  E8 00000000 E		call clrscr
 0000004D  B9 0000000F			mov ecx, sizeof name1
 00000052  BB 000000C2 R		mov ebx, offset name1
 00000057  E8 FFFFFFA4			call getName

 0000005C  B9 0000000F			mov ecx, sizeof name2
 00000061  BB 000000D1 R		mov ebx, offset name2
 00000066  E8 FFFFFF95			call getName

 0000006B  B9 0000000F			mov ecx, sizeof name3
 00000070  BB 000000E0 R		mov ebx, offset name3
 00000075  E8 FFFFFF86			call getName

 0000007A  B9 00000003			mov ecx, 3
 0000007F				L1:
 0000007F  8B D9			mov ebx, ecx
 00000081  BA 0000000C R		mov edx, OFFSET myMessage
 00000086  E8 00000000 E		call writestring
 0000008B  B8 00000004			mov eax, 4
 00000090  2B C1			sub eax, ecx
 00000092  E8 00000000 E		call writeint
 00000097  BA 00000037 R		mov edx, OFFSET mymessage2
 0000009C  E8 00000000 E		call writestring
					
 000000A1  B9 00000005			mov ecx, 5
 000000A6  BA 00000000			mov edx, 0

 000000AB  E8 FFFFFF64			call getaverage1

 000000B0  83 FB 01			cmp ebx, 1
 000000B3  74 02			je nameOne
 000000B5  75 07			jne check2ndname

 000000B7				nameOne:
 000000B7  A3 00000000 R		mov average1, eax
 000000BC  EB 15			jmp done

 000000BE				check2ndname:
 000000BE  83 FB 02			cmp ebx, 2

 000000C1  74 02			je nameTwo
 000000C3  75 07			jne nameThree

 000000C5				nameTwo:
 000000C5  A3 00000004 R		mov average2, eax
 000000CA  EB 07			jmp done

 000000CC				nameThree:
 000000CC  A3 00000008 R		mov average3, eax
 000000D1  EB 00			jmp done

 000000D3				done:
 000000D3  8B C2			mov eax, edx
 000000D5  89 15 00000000 R		mov average1, edx
 000000DB  E8 00000000 E		call crlf
 000000E0  E8 00000000 E		call crlf

 000000E5  8B CB			mov ecx, ebx
 000000E7  E2 96			loop L1
					
					;----------------------------------------------------------------

 000000E9  83 3D 00000008 R		cmp average3, 89
	   59
 000000F0  7F 02			jg gradeA
 000000F2  EB 45			jmp compareB

 000000F4				gradeA:
 000000F4  BA 000000C2 R		mov edx, OFFSET name1
 000000F9  E8 00000000 E		call writestring
 000000FE  BA 00000065 R		mov edx, OFFSET mymessage5
 00000103  E8 00000000 E		call writestring
 00000108  A1 00000008 R		mov eax, average3
 0000010D  BB 00000005			mov ebx, 5
 00000112  33 D2			xor edx, edx
 00000114  F7 F3			div ebx
 00000116  E8 00000000 E		call writeint
 0000011B  BA 00000078 R		mov edx, OFFSET mymessage6
 00000120  E8 00000000 E		call writestring
 00000125  BA 0000007C R		mov edx, OFFSET myMessageA
 0000012A  E8 00000000 E		call writestring
 0000012F  E8 00000000 E		call crlf
 00000134  E9 000000DF			jmp nextGrade1

 00000139				compareB:
 00000139  83 3D 00000008 R		cmp average3, 79
	   4F
 00000140  7F 02			jg gradeB
 00000142  EB 45			jmp compareC

 00000144				gradeB:
 00000144  BA 000000C2 R		mov edx, OFFSET name1
 00000149  E8 00000000 E		call writestring
 0000014E  BA 00000065 R		mov edx, OFFSET mymessage5
 00000153  E8 00000000 E		call writestring
 00000158  A1 00000008 R		mov eax, average3
 0000015D  BB 00000005			mov ebx, 5
 00000162  33 D2			xor edx, edx
 00000164  F7 F3			div ebx
 00000166  E8 00000000 E		call writeint
 0000016B  BA 00000078 R		mov edx, OFFSET mymessage6
 00000170  E8 00000000 E		call writestring
 00000175  BA 0000008D R		mov edx, OFFSET myMessageB
 0000017A  E8 00000000 E		call writestring
 0000017F  E8 00000000 E		call crlf
 00000184  E9 0000008F			jmp nextGrade1

 00000189				compareC:
 00000189  83 3D 00000008 R		cmp average3, 69
	   45
 00000190  7F 02			jg gradeC
 00000192  EB 42			jmp compareF

 00000194				gradeC:
 00000194  BA 000000C2 R		mov edx, OFFSET name1
 00000199  E8 00000000 E		call writestring
 0000019E  BA 00000065 R		mov edx, OFFSET mymessage5
 000001A3  E8 00000000 E		call writestring
 000001A8  A1 00000008 R		mov eax, average3
 000001AD  BB 00000005			mov ebx, 5
 000001B2  33 D2			xor edx, edx
 000001B4  F7 F3			div ebx
 000001B6  E8 00000000 E		call writeint
 000001BB  BA 00000078 R		mov edx, OFFSET mymessage6
 000001C0  E8 00000000 E		call writestring
 000001C5  BA 0000009E R		mov edx, OFFSET myMessageC
 000001CA  E8 00000000 E		call writestring
 000001CF  E8 00000000 E		call crlf
 000001D4  EB 42			jmp nextGrade1

 000001D6				compareF:
 000001D6  BA 000000C2 R		mov edx, OFFSET name1
 000001DB  E8 00000000 E		call writestring
 000001E0  BA 00000065 R		mov edx, OFFSET mymessage5
 000001E5  E8 00000000 E		call writestring
 000001EA  A1 00000008 R		mov eax, average3
 000001EF  BB 00000005			mov ebx, 5
 000001F4  33 D2			xor edx, edx
 000001F6  F7 F3			div ebx
 000001F8  E8 00000000 E		call writeint
 000001FD  BA 00000078 R		mov edx, OFFSET mymessage6
 00000202  E8 00000000 E		call writestring
 00000207  BA 000000AF R		mov edx, OFFSET myMessageF
 0000020C  E8 00000000 E		call writestring
 00000211  E8 00000000 E		call crlf
 00000216  EB 00			jmp nextGrade1

					;------------------------------------------------------------------

 00000218				nextGrade1:
 00000218  83 3D 00000004 R		cmp average2, 89
	   59
 0000021F  7F 02			jg gradeA1
 00000221  EB 45			jmp compareB1

 00000223				gradeA1:
 00000223  BA 000000D1 R		mov edx, OFFSET name2
 00000228  E8 00000000 E		call writestring
 0000022D  BA 00000065 R		mov edx, OFFSET mymessage5
 00000232  E8 00000000 E		call writestring
 00000237  A1 00000004 R		mov eax, average2
 0000023C  BB 00000005			mov ebx, 5
 00000241  33 D2			xor edx, edx
 00000243  F7 F3			div ebx
 00000245  E8 00000000 E		call writeint
 0000024A  BA 00000078 R		mov edx, OFFSET mymessage6
 0000024F  E8 00000000 E		call writestring
 00000254  BA 0000007C R		mov edx, OFFSET myMessageA
 00000259  E8 00000000 E		call writestring
 0000025E  E8 00000000 E		call crlf
 00000263  E9 000000DF			jmp nextGrade2

 00000268				compareB1:
 00000268  83 3D 00000004 R		cmp average2, 79
	   4F
 0000026F  7F 02			jg gradeB1
 00000271  EB 45			jmp compareC1

 00000273				gradeB1:
 00000273  BA 000000D1 R		mov edx, OFFSET name2
 00000278  E8 00000000 E		call writestring
 0000027D  BA 00000065 R		mov edx, OFFSET mymessage5
 00000282  E8 00000000 E		call writestring
 00000287  A1 00000004 R		mov eax, average2
 0000028C  BB 00000005			mov ebx, 5
 00000291  33 D2			xor edx, edx
 00000293  F7 F3			div ebx
 00000295  E8 00000000 E		call writeint
 0000029A  BA 00000078 R		mov edx, OFFSET mymessage6
 0000029F  E8 00000000 E		call writestring
 000002A4  BA 0000008D R		mov edx, OFFSET myMessageB
 000002A9  E8 00000000 E		call writestring
 000002AE  E8 00000000 E		call crlf
 000002B3  E9 0000008F			jmp nextGrade2

 000002B8				compareC1:
 000002B8  83 3D 00000004 R		cmp average2, 69
	   45
 000002BF  7F 02			jg gradeC1
 000002C1  EB 42			jmp compareF1

 000002C3				gradeC1:
 000002C3  BA 000000D1 R		mov edx, OFFSET name2
 000002C8  E8 00000000 E		call writestring
 000002CD  BA 00000065 R		mov edx, OFFSET mymessage5
 000002D2  E8 00000000 E		call writestring
 000002D7  A1 00000004 R		mov eax, average2
 000002DC  BB 00000005			mov ebx, 5
 000002E1  33 D2			xor edx, edx
 000002E3  F7 F3			div ebx
 000002E5  E8 00000000 E		call writeint
 000002EA  BA 00000078 R		mov edx, OFFSET mymessage6
 000002EF  E8 00000000 E		call writestring
 000002F4  BA 0000009E R		mov edx, OFFSET myMessageC
 000002F9  E8 00000000 E		call writestring
 000002FE  E8 00000000 E		call crlf
 00000303  EB 42			jmp nextGrade2

 00000305				compareF1:
 00000305  BA 000000D1 R		mov edx, OFFSET name2
 0000030A  E8 00000000 E		call writestring
 0000030F  BA 00000065 R		mov edx, OFFSET mymessage5
 00000314  E8 00000000 E		call writestring
 00000319  A1 00000004 R		mov eax, average2
 0000031E  BB 00000005			mov ebx, 5
 00000323  33 D2			xor edx, edx
 00000325  F7 F3			div ebx
 00000327  E8 00000000 E		call writeint
 0000032C  BA 00000078 R		mov edx, OFFSET mymessage6
 00000331  E8 00000000 E		call writestring
 00000336  BA 000000AF R		mov edx, OFFSET myMessageF
 0000033B  E8 00000000 E		call writestring
 00000340  E8 00000000 E		call crlf
 00000345  EB 00			jmp nextGrade2

					;-----------------------------------------------------------------------

 00000347				nextGrade2:
 00000347  83 3D 00000000 R		cmp average1, 89
	   59
 0000034E  7F 02			jg gradeA2
 00000350  EB 45			jmp compareB2

 00000352				gradeA2:
 00000352  BA 000000E0 R		mov edx, OFFSET name3
 00000357  E8 00000000 E		call writestring
 0000035C  BA 00000065 R		mov edx, OFFSET mymessage5
 00000361  E8 00000000 E		call writestring
 00000366  A1 00000000 R		mov eax, average1
 0000036B  BB 00000005			mov ebx, 5
 00000370  33 D2			xor edx, edx
 00000372  F7 F3			div ebx
 00000374  E8 00000000 E		call writeint
 00000379  BA 00000078 R		mov edx, OFFSET mymessage6
 0000037E  E8 00000000 E		call writestring
 00000383  BA 0000007C R		mov edx, OFFSET myMessageA
 00000388  E8 00000000 E		call writestring
 0000038D  E8 00000000 E		call crlf
 00000392  E9 000000DF			jmp ending1

 00000397				compareB2:
 00000397  83 3D 00000000 R		cmp average1, 79
	   4F
 0000039E  7F 02			jg gradeB2
 000003A0  EB 45			jmp compareC2

 000003A2				gradeB2:
 000003A2  BA 000000E0 R		mov edx, OFFSET name3
 000003A7  E8 00000000 E		call writestring
 000003AC  BA 00000065 R		mov edx, OFFSET mymessage5
 000003B1  E8 00000000 E		call writestring
 000003B6  A1 00000000 R		mov eax, average1
 000003BB  BB 00000005			mov ebx, 5
 000003C0  33 D2			xor edx, edx
 000003C2  F7 F3			div ebx
 000003C4  E8 00000000 E		call writeint
 000003C9  BA 00000078 R		mov edx, OFFSET mymessage6
 000003CE  E8 00000000 E		call writestring
 000003D3  BA 0000008D R		mov edx, OFFSET myMessageB
 000003D8  E8 00000000 E		call writestring
 000003DD  E8 00000000 E		call crlf
 000003E2  E9 0000008F			jmp ending1

 000003E7				compareC2:
 000003E7  83 3D 00000000 R		cmp average1, 69
	   45
 000003EE  7F 02			jg gradeC2
 000003F0  EB 42			jmp compareF2

 000003F2				gradeC2:
 000003F2  BA 000000E0 R		mov edx, OFFSET name3
 000003F7  E8 00000000 E		call writestring
 000003FC  BA 00000065 R		mov edx, OFFSET mymessage5
 00000401  E8 00000000 E		call writestring
 00000406  A1 00000000 R		mov eax, average1
 0000040B  BB 00000005			mov ebx, 5
 00000410  33 D2			xor edx, edx
 00000412  F7 F3			div ebx
 00000414  E8 00000000 E		call writeint
 00000419  BA 00000078 R		mov edx, OFFSET mymessage6
 0000041E  E8 00000000 E		call writestring
 00000423  BA 0000009E R		mov edx, OFFSET myMessageC
 00000428  E8 00000000 E		call writestring
 0000042D  E8 00000000 E		call crlf
 00000432  EB 42			jmp ending1

 00000434				compareF2:
 00000434  BA 000000E0 R		mov edx, OFFSET name3
 00000439  E8 00000000 E		call writestring
 0000043E  BA 00000065 R		mov edx, OFFSET mymessage5
 00000443  E8 00000000 E		call writestring
 00000448  A1 00000000 R		mov eax, average1
 0000044D  BB 00000005			mov ebx, 5
 00000452  33 D2			xor edx, edx
 00000454  F7 F3			div ebx
 00000456  E8 00000000 E		call writeint
 0000045B  BA 00000078 R		mov edx, OFFSET mymessage6
 00000460  E8 00000000 E		call writestring
 00000465  BA 000000AF R		mov edx, OFFSET myMessageF
 0000046A  E8 00000000 E		call writestring
 0000046F  E8 00000000 E		call crlf
 00000474  EB 00			jmp ending1

 00000476				ending1:
					exit
 00000476  6A 00	   *	    push   +000000000h
 00000478  E8 00000000 E   *	    call   ExitProcess
 0000047D			main ENDP

				END main
Microsoft (R) Macro Assembler Version 14.16.27045.0	    10/17/21 21:25:33
MASM Template						(main.asm  Symbols 2 - 1




Structures and Unions:

                N a m e                  Size
                                         Offset      Type

CONSOLE_CURSOR_INFO  . . . . . .	 00000008
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  bVisible . . . . . . . . . . .	 00000004	 DWord
CONSOLE_SCREEN_BUFFER_INFO . . .	 00000016
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCursorPosition . . . . . . .	 00000004	 DWord
  wAttributes  . . . . . . . . .	 00000008	 Word
  srWindow . . . . . . . . . . .	 0000000A	 QWord
  dwMaximumWindowSize  . . . . .	 00000012	 DWord
COORD  . . . . . . . . . . . . .	 00000004
  X  . . . . . . . . . . . . . .	 00000000	 Word
  Y  . . . . . . . . . . . . . .	 00000002	 Word
FILETIME . . . . . . . . . . . .	 00000008
  loDateTime . . . . . . . . . .	 00000000	 DWord
  hiDateTime . . . . . . . . . .	 00000004	 DWord
FOCUS_EVENT_RECORD . . . . . . .	 00000004
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
FPU_ENVIRON  . . . . . . . . . .	 0000001C
  controlWord  . . . . . . . . .	 00000000	 Word
  statusWord . . . . . . . . . .	 00000004	 Word
  tagWord  . . . . . . . . . . .	 00000008	 Word
  instrPointerOffset . . . . . .	 0000000C	 DWord
  instrPointerSelector . . . . .	 00000010	 DWord
  operandPointerOffset . . . . .	 00000014	 DWord
  operandPointerSelector . . . .	 00000018	 Word
INPUT_RECORD . . . . . . . . . .	 00000014
  EventType  . . . . . . . . . .	 00000000	 Word
  Event  . . . . . . . . . . . .	 00000004	 XmmWord
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCommandId  . . . . . . . . .	 00000000	 DWord
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
KEY_EVENT_RECORD . . . . . . . .	 00000010
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
MENU_EVENT_RECORD  . . . . . . .	 00000004
  dwCommandId  . . . . . . . . .	 00000000	 DWord
MOUSE_EVENT_RECORD . . . . . . .	 00000010
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
SMALL_RECT . . . . . . . . . . .	 00000008
  Left . . . . . . . . . . . . .	 00000000	 Word
  Top  . . . . . . . . . . . . .	 00000002	 Word
  Right  . . . . . . . . . . . .	 00000004	 Word
  Bottom . . . . . . . . . . . .	 00000006	 Word
SYSTEMTIME . . . . . . . . . . .	 00000010
  wYear  . . . . . . . . . . . .	 00000000	 Word
  wMonth . . . . . . . . . . . .	 00000002	 Word
  wDayOfWeek . . . . . . . . . .	 00000004	 Word
  wDay . . . . . . . . . . . . .	 00000006	 Word
  wHour  . . . . . . . . . . . .	 00000008	 Word
  wMinute  . . . . . . . . . . .	 0000000A	 Word
  wSecond  . . . . . . . . . . .	 0000000C	 Word
  wMilliseconds  . . . . . . . .	 0000000E	 Word
WINDOW_BUFFER_SIZE_RECORD  . . .	 00000004
  dwSize . . . . . . . . . . . .	 00000000	 DWord


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 000000EF Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 0000047D Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

CloseFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CloseHandle  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Clrscr . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateFileA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateOutputFile . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Crlf . . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Delay  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpMem  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpRegs . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToDosDateTime  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToSystemTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FlushConsoleInputBuffer  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FormatMessageA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandLineA  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandTail . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCP . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleScreenBufferInfo . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDateTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetFileTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetKeyState  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLastError . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMaxXY . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMseconds  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNumberOfConsoleInputEvents  .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetProcessHeap . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetStdHandle . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemTime  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTickCount . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Gotoxy . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapAlloc  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapCreate . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapDestroy  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapFree . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapSize . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
IsDigit  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
LocalFree  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MessageBoxA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBoxAsk  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBox . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OpenInputFile  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseDecimal32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseInteger32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PeekConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Random32 . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RandomRange  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Randomize  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadChar . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleA . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadDec  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFile . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFloat  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFromFile . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadHex  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadInt  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKeyFlush . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKey  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadString . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorPosition . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleScreenBufferSize . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTextAttribute  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleWindowInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetFilePointer . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ShowFPUStack . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Sleep  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
StrLength  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_compare  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_copy . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_length . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_trim . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_ucase  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SystemTimeToFileTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WaitMsg  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBinB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBin . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteChar  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleA  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputAttribute  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputCharacterA . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteDec . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFloat . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHexB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHex . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteInt . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrameName  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrame  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteString  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteToFile  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteWindowsMsg  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
getAverage1  . . . . . . . . . .	P Near	 00000014 _TEXT	Length= 00000034 Public STDCALL
  L2 . . . . . . . . . . . . . .	L Near	 00000014 _TEXT	
getName  . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 00000014 Public STDCALL
main . . . . . . . . . . . . . .	P Near	 00000048 _TEXT	Length= 00000435 Public STDCALL
  L1 . . . . . . . . . . . . . .	L Near	 0000007F _TEXT	
  nameOne  . . . . . . . . . . .	L Near	 000000B7 _TEXT	
  check2ndname . . . . . . . . .	L Near	 000000BE _TEXT	
  nameTwo  . . . . . . . . . . .	L Near	 000000C5 _TEXT	
  nameThree  . . . . . . . . . .	L Near	 000000CC _TEXT	
  done . . . . . . . . . . . . .	L Near	 000000D3 _TEXT	
  gradeA . . . . . . . . . . . .	L Near	 000000F4 _TEXT	
  compareB . . . . . . . . . . .	L Near	 00000139 _TEXT	
  gradeB . . . . . . . . . . . .	L Near	 00000144 _TEXT	
  compareC . . . . . . . . . . .	L Near	 00000189 _TEXT	
  gradeC . . . . . . . . . . . .	L Near	 00000194 _TEXT	
  compareF . . . . . . . . . . .	L Near	 000001D6 _TEXT	
  nextGrade1 . . . . . . . . . .	L Near	 00000218 _TEXT	
  gradeA1  . . . . . . . . . . .	L Near	 00000223 _TEXT	
  compareB1  . . . . . . . . . .	L Near	 00000268 _TEXT	
  gradeB1  . . . . . . . . . . .	L Near	 00000273 _TEXT	
  compareC1  . . . . . . . . . .	L Near	 000002B8 _TEXT	
  gradeC1  . . . . . . . . . . .	L Near	 000002C3 _TEXT	
  compareF1  . . . . . . . . . .	L Near	 00000305 _TEXT	
  nextGrade2 . . . . . . . . . .	L Near	 00000347 _TEXT	
  gradeA2  . . . . . . . . . . .	L Near	 00000352 _TEXT	
  compareB2  . . . . . . . . . .	L Near	 00000397 _TEXT	
  gradeB2  . . . . . . . . . . .	L Near	 000003A2 _TEXT	
  compareC2  . . . . . . . . . .	L Near	 000003E7 _TEXT	
  gradeC2  . . . . . . . . . . .	L Near	 000003F2 _TEXT	
  compareF2  . . . . . . . . . .	L Near	 00000434 _TEXT	
  ending1  . . . . . . . . . . .	L Near	 00000476 _TEXT	
printf . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
scanf  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
wsprintfA  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
ALT_MASK . . . . . . . . . . . .	Number	 00000003h   
CAPSLOCK_ON  . . . . . . . . . .	Number	 00000080h   
CREATE_ALWAYS  . . . . . . . . .	Number	 00000002h   
CREATE_NEW . . . . . . . . . . .	Number	 00000001h   
CTRL_MASK  . . . . . . . . . . .	Number	 0000000Ch   
CreateFile . . . . . . . . . . .	Text   	 CreateFileA
DO_NOT_SHARE . . . . . . . . . .	Number	 00000000h   
ENABLE_ECHO_INPUT  . . . . . . .	Number	 00000004h   
ENABLE_LINE_INPUT  . . . . . . .	Number	 00000002h   
ENABLE_MOUSE_INPUT . . . . . . .	Number	 00000010h   
ENABLE_PROCESSED_INPUT . . . . .	Number	 00000001h   
ENABLE_PROCESSED_OUTPUT  . . . .	Number	 00000001h   
ENABLE_WINDOW_INPUT  . . . . . .	Number	 00000008h   
ENABLE_WRAP_AT_EOL_OUTPUT  . . .	Number	 00000002h   
ENHANCED_KEY . . . . . . . . . .	Number	 00000100h   
FALSE  . . . . . . . . . . . . .	Number	 00000000h   
FILE_APPEND_DATA . . . . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_ARCHIVE . . . . .	Number	 00000020h   
FILE_ATTRIBUTE_COMPRESSED  . . .	Number	 00000800h   
FILE_ATTRIBUTE_DEVICE  . . . . .	Number	 00000040h   
FILE_ATTRIBUTE_DIRECTORY . . . .	Number	 00000010h   
FILE_ATTRIBUTE_ENCRYPTED . . . .	Number	 00004000h   
FILE_ATTRIBUTE_HIDDEN  . . . . .	Number	 00000002h   
FILE_ATTRIBUTE_NORMAL  . . . . .	Number	 00000080h   
FILE_ATTRIBUTE_NOT_CONTENT_INDEXED .	Number	 00002000h   
FILE_ATTRIBUTE_OFFLINE . . . . .	Number	 00001000h   
FILE_ATTRIBUTE_READONLY  . . . .	Number	 00000001h   
FILE_ATTRIBUTE_REPARSE_POINT . .	Number	 00000400h   
FILE_ATTRIBUTE_SPARSE_FILE . . .	Number	 00000200h   
FILE_ATTRIBUTE_SYSTEM  . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_TEMPORARY . . . .	Number	 00000100h   
FILE_BEGIN . . . . . . . . . . .	Number	 00000000h   
FILE_CURRENT . . . . . . . . . .	Number	 00000001h   
FILE_DELETE_CHILD  . . . . . . .	Number	 00000040h   
FILE_END . . . . . . . . . . . .	Number	 00000002h   
FILE_READ_DATA . . . . . . . . .	Number	 00000001h   
FILE_SHARE_DELETE  . . . . . . .	Number	 00000004h   
FILE_SHARE_READ  . . . . . . . .	Number	 00000001h   
FILE_SHARE_WRITE . . . . . . . .	Number	 00000002h   
FILE_WRITE_DATA  . . . . . . . .	Number	 00000002h   
FOCUS_EVENT  . . . . . . . . . .	Number	 00000010h   
FORMAT_MESSAGE_ALLOCATE_BUFFER .	Number	 00000100h   
FORMAT_MESSAGE_FROM_SYSTEM . . .	Number	 00001000h   
FormatMessage  . . . . . . . . .	Text   	 FormatMessageA
GENERIC_ALL  . . . . . . . . . .	Number	 10000000h   
GENERIC_EXECUTE  . . . . . . . .	Number	 20000000h   
GENERIC_READ . . . . . . . . . .	Number	 -80000000h   
GENERIC_WRITE  . . . . . . . . .	Number	 40000000h   
GetCommandLine . . . . . . . . .	Text   	 GetCommandLineA
HANDLE . . . . . . . . . . . . .	Text   	 DWORD
HEAP_GENERATE_EXCEPTIONS . . . .	Number	 00000004h   
HEAP_GROWABLE  . . . . . . . . .	Number	 00000002h   
HEAP_NO_SERIALIZE  . . . . . . .	Number	 00000001h   
HEAP_REALLOC_IN_PLACE_ONLY . . .	Number	 00000010h   
HEAP_ZERO_MEMORY . . . . . . . .	Number	 00000008h   
IDABORT  . . . . . . . . . . . .	Number	 00000003h   
IDCANCEL . . . . . . . . . . . .	Number	 00000002h   
IDCLOSE  . . . . . . . . . . . .	Number	 00000008h   
IDCONTINUE . . . . . . . . . . .	Number	 0000000Bh   
IDHELP . . . . . . . . . . . . .	Number	 00000009h   
IDIGNORE . . . . . . . . . . . .	Number	 00000005h   
IDNO . . . . . . . . . . . . . .	Number	 00000007h   
IDOK . . . . . . . . . . . . . .	Number	 00000001h   
IDRETRY  . . . . . . . . . . . .	Number	 00000004h   
IDTIMEOUT  . . . . . . . . . . .	Number	 00007D00h   
IDTRYAGAIN . . . . . . . . . . .	Number	 0000000Ah   
IDYES  . . . . . . . . . . . . .	Number	 00000006h   
INVALID_HANDLE_VALUE . . . . . .	Number	 -00000001h   
KBDOWN_FLAG  . . . . . . . . . .	Number	 00000001h   
KEY_EVENT  . . . . . . . . . . .	Number	 00000001h   
KEY_MASKS  . . . . . . . . . . .	Number	 0000001Fh   
LEFT_ALT_PRESSED . . . . . . . .	Number	 00000002h   
LEFT_CTRL_PRESSED  . . . . . . .	Number	 00000008h   
MB_ABORTRETRYIGNORE  . . . . . .	Number	 00000002h   
MB_APPLMODAL . . . . . . . . . .	Number	 00000000h   
MB_CANCELTRYCONTINUE . . . . . .	Number	 00000006h   
MB_DEFBUTTON1  . . . . . . . . .	Number	 00000000h   
MB_DEFBUTTON2  . . . . . . . . .	Number	 00000100h   
MB_DEFBUTTON3  . . . . . . . . .	Number	 00000200h   
MB_DEFBUTTON4  . . . . . . . . .	Number	 00000300h   
MB_HELP  . . . . . . . . . . . .	Number	 00004000h   
MB_ICONASTERISK  . . . . . . . .	Number	 00000040h   
MB_ICONERROR . . . . . . . . . .	Number	 00000010h   
MB_ICONEXCLAMATION . . . . . . .	Number	 00000030h   
MB_ICONHAND  . . . . . . . . . .	Number	 00000010h   
MB_ICONINFORMATION . . . . . . .	Number	 00000040h   
MB_ICONQUESTION  . . . . . . . .	Number	 00000020h   
MB_ICONSTOP  . . . . . . . . . .	Number	 00000010h   
MB_ICONWARNING . . . . . . . . .	Number	 00000030h   
MB_OKCANCEL  . . . . . . . . . .	Number	 00000001h   
MB_OK  . . . . . . . . . . . . .	Number	 00000000h   
MB_RETRYCANCEL . . . . . . . . .	Number	 00000005h   
MB_SYSTEMMODAL . . . . . . . . .	Number	 00001000h   
MB_TASKMODAL . . . . . . . . . .	Number	 00002000h   
MB_USERICON  . . . . . . . . . .	Number	 00000080h   
MB_YESNOCANCEL . . . . . . . . .	Number	 00000003h   
MB_YESNO . . . . . . . . . . . .	Number	 00000004h   
MENU_EVENT . . . . . . . . . . .	Number	 00000008h   
MOUSE_EVENT  . . . . . . . . . .	Number	 00000002h   
MessageBox . . . . . . . . . . .	Text   	 MessageBoxA
NULL . . . . . . . . . . . . . .	Number	 00000000h   
NUMLOCK_ON . . . . . . . . . . .	Number	 00000020h   
OPEN_ALWAYS  . . . . . . . . . .	Number	 00000004h   
OPEN_EXISTING  . . . . . . . . .	Number	 00000003h   
PeekConsoleInput . . . . . . . .	Text   	 PeekConsoleInputA
RIGHT_ALT_PRESSED  . . . . . . .	Number	 00000001h   
RIGHT_CTRL_PRESSED . . . . . . .	Number	 00000004h   
ReadConsoleInput . . . . . . . .	Text   	 ReadConsoleInputA
ReadConsole  . . . . . . . . . .	Text   	 ReadConsoleA
SCROLLLOCK_ON  . . . . . . . . .	Number	 00000040h   
SHIFT_MASK . . . . . . . . . . .	Number	 00000010h   
SHIFT_PRESSED  . . . . . . . . .	Number	 00000010h   
STD_ERROR_HANDLE . . . . . . . .	Number	 -0000000Ch   
STD_INPUT_HANDLE . . . . . . . .	Number	 -0000000Ah   
STD_OUTPUT_HANDLE  . . . . . . .	Number	 -0000000Bh   
SetConsoleTitle  . . . . . . . .	Text   	 SetConsoleTitleA
TAB  . . . . . . . . . . . . . .	Number	 00000009h   
TRUE . . . . . . . . . . . . . .	Number	 00000001h   
TRUNCATE_EXISTING  . . . . . . .	Number	 00000005h   
VK_11  . . . . . . . . . . . . .	Number	 000000BDh   
VK_12  . . . . . . . . . . . . .	Number	 000000BBh   
VK_ADD . . . . . . . . . . . . .	Number	 0000006Bh   
VK_BACK  . . . . . . . . . . . .	Number	 00000008h   
VK_CANCEL  . . . . . . . . . . .	Number	 00000003h   
VK_CAPITAL . . . . . . . . . . .	Number	 00000014h   
VK_CLEAR . . . . . . . . . . . .	Number	 0000000Ch   
VK_CONTROL . . . . . . . . . . .	Number	 00000011h   
VK_DECIMAL . . . . . . . . . . .	Number	 0000006Eh   
VK_DELETE  . . . . . . . . . . .	Number	 0000002Eh   
VK_DIVIDE  . . . . . . . . . . .	Number	 0000006Fh   
VK_DOWN  . . . . . . . . . . . .	Number	 00000028h   
VK_END . . . . . . . . . . . . .	Number	 00000023h   
VK_ESCAPE  . . . . . . . . . . .	Number	 0000001Bh   
VK_EXECUTE . . . . . . . . . . .	Number	 0000002Bh   
VK_F10 . . . . . . . . . . . . .	Number	 00000079h   
VK_F11 . . . . . . . . . . . . .	Number	 0000007Ah   
VK_F12 . . . . . . . . . . . . .	Number	 0000007Bh   
VK_F13 . . . . . . . . . . . . .	Number	 0000007Ch   
VK_F14 . . . . . . . . . . . . .	Number	 0000007Dh   
VK_F15 . . . . . . . . . . . . .	Number	 0000007Eh   
VK_F16 . . . . . . . . . . . . .	Number	 0000007Fh   
VK_F17 . . . . . . . . . . . . .	Number	 00000080h   
VK_F18 . . . . . . . . . . . . .	Number	 00000081h   
VK_F19 . . . . . . . . . . . . .	Number	 00000082h   
VK_F1  . . . . . . . . . . . . .	Number	 00000070h   
VK_F20 . . . . . . . . . . . . .	Number	 00000083h   
VK_F21 . . . . . . . . . . . . .	Number	 00000084h   
VK_F22 . . . . . . . . . . . . .	Number	 00000085h   
VK_F23 . . . . . . . . . . . . .	Number	 00000086h   
VK_F24 . . . . . . . . . . . . .	Number	 00000087h   
VK_F2  . . . . . . . . . . . . .	Number	 00000071h   
VK_F3  . . . . . . . . . . . . .	Number	 00000072h   
VK_F4  . . . . . . . . . . . . .	Number	 00000073h   
VK_F5  . . . . . . . . . . . . .	Number	 00000074h   
VK_F6  . . . . . . . . . . . . .	Number	 00000075h   
VK_F7  . . . . . . . . . . . . .	Number	 00000076h   
VK_F8  . . . . . . . . . . . . .	Number	 00000077h   
VK_F9  . . . . . . . . . . . . .	Number	 00000078h   
VK_HELP  . . . . . . . . . . . .	Number	 0000002Fh   
VK_HOME  . . . . . . . . . . . .	Number	 00000024h   
VK_INSERT  . . . . . . . . . . .	Number	 0000002Dh   
VK_LBUTTON . . . . . . . . . . .	Number	 00000001h   
VK_LCONTROL  . . . . . . . . . .	Number	 000000A2h   
VK_LEFT  . . . . . . . . . . . .	Number	 00000025h   
VK_LMENU . . . . . . . . . . . .	Number	 000000A4h   
VK_LSHIFT  . . . . . . . . . . .	Number	 000000A0h   
VK_MENU  . . . . . . . . . . . .	Number	 00000012h   
VK_MULTIPLY  . . . . . . . . . .	Number	 0000006Ah   
VK_NEXT  . . . . . . . . . . . .	Number	 00000022h   
VK_NUMLOCK . . . . . . . . . . .	Number	 00000090h   
VK_NUMPAD0 . . . . . . . . . . .	Number	 00000060h   
VK_NUMPAD1 . . . . . . . . . . .	Number	 00000061h   
VK_NUMPAD2 . . . . . . . . . . .	Number	 00000062h   
VK_NUMPAD3 . . . . . . . . . . .	Number	 00000063h   
VK_NUMPAD4 . . . . . . . . . . .	Number	 00000064h   
VK_NUMPAD5 . . . . . . . . . . .	Number	 00000065h   
VK_NUMPAD6 . . . . . . . . . . .	Number	 00000066h   
VK_NUMPAD7 . . . . . . . . . . .	Number	 00000067h   
VK_NUMPAD8 . . . . . . . . . . .	Number	 00000068h   
VK_NUMPAD9 . . . . . . . . . . .	Number	 00000069h   
VK_PAUSE . . . . . . . . . . . .	Number	 00000013h   
VK_PRINT . . . . . . . . . . . .	Number	 0000002Ah   
VK_PRIOR . . . . . . . . . . . .	Number	 00000021h   
VK_RBUTTON . . . . . . . . . . .	Number	 00000002h   
VK_RCONTROL  . . . . . . . . . .	Number	 000000A3h   
VK_RETURN  . . . . . . . . . . .	Number	 0000000Dh   
VK_RIGHT . . . . . . . . . . . .	Number	 00000027h   
VK_RMENU . . . . . . . . . . . .	Number	 000000A5h   
VK_RSHIFT  . . . . . . . . . . .	Number	 000000A1h   
VK_SCROLL  . . . . . . . . . . .	Number	 00000091h   
VK_SEPARATER . . . . . . . . . .	Number	 0000006Ch   
VK_SHIFT . . . . . . . . . . . .	Number	 00000010h   
VK_SNAPSHOT  . . . . . . . . . .	Number	 0000002Ch   
VK_SPACE . . . . . . . . . . . .	Number	 00000020h   
VK_SUBTRACT  . . . . . . . . . .	Number	 0000006Dh   
VK_TAB . . . . . . . . . . . . .	Number	 00000009h   
VK_UP  . . . . . . . . . . . . .	Number	 00000026h   
WINDOW_BUFFER_SIZE_EVENT . . . .	Number	 00000004h   
WriteConsoleOutputCharacter  . .	Text   	 WriteConsoleOutputCharacterA
WriteConsole . . . . . . . . . .	Text   	 WriteConsoleA
average1 . . . . . . . . . . . .	DWord	 00000000 _DATA	
average2 . . . . . . . . . . . .	DWord	 00000004 _DATA	
average3 . . . . . . . . . . . .	DWord	 00000008 _DATA	
black  . . . . . . . . . . . . .	Number	 00000000h   
blue . . . . . . . . . . . . . .	Number	 00000001h   
brown  . . . . . . . . . . . . .	Number	 00000006h   
cyan . . . . . . . . . . . . . .	Number	 00000003h   
exit . . . . . . . . . . . . . .	Text   	 INVOKE ExitProcess,0
gray . . . . . . . . . . . . . .	Number	 00000008h   
green  . . . . . . . . . . . . .	Number	 00000002h   
lightBlue  . . . . . . . . . . .	Number	 00000009h   
lightCyan  . . . . . . . . . . .	Number	 0000000Bh   
lightGray  . . . . . . . . . . .	Number	 00000007h   
lightGreen . . . . . . . . . . .	Number	 0000000Ah   
lightMagenta . . . . . . . . . .	Number	 0000000Dh   
lightRed . . . . . . . . . . . .	Number	 0000000Ch   
magenta  . . . . . . . . . . . .	Number	 00000005h   
myMessage1 . . . . . . . . . . .	Byte	 0000001C _DATA	
myMessage2 . . . . . . . . . . .	Byte	 00000037 _DATA	
myMessage5 . . . . . . . . . . .	Byte	 00000065 _DATA	
myMessage6 . . . . . . . . . . .	Byte	 00000078 _DATA	
myMessageA . . . . . . . . . . .	Byte	 0000007C _DATA	
myMessageB . . . . . . . . . . .	Byte	 0000008D _DATA	
myMessageC . . . . . . . . . . .	Byte	 0000009E _DATA	
myMessageF . . . . . . . . . . .	Byte	 000000AF _DATA	
myMessage  . . . . . . . . . . .	Byte	 0000000C _DATA	
mymessage3 . . . . . . . . . . .	Byte	 00000053 _DATA	
mymessage4 . . . . . . . . . . .	Byte	 00000061 _DATA	
name1  . . . . . . . . . . . . .	Byte	 000000C2 _DATA	
name2  . . . . . . . . . . . . .	Byte	 000000D1 _DATA	
name3  . . . . . . . . . . . . .	Byte	 000000E0 _DATA	
red  . . . . . . . . . . . . . .	Number	 00000004h   
white  . . . . . . . . . . . . .	Number	 0000000Fh   
wsprintf . . . . . . . . . . . .	Text   	 wsprintfA
yellow . . . . . . . . . . . . .	Number	 0000000Eh   

	   0 Warnings
	   0 Errors
